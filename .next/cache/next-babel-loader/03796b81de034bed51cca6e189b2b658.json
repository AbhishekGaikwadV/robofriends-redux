{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\WebStormProject\\\\Complete Developer Map 2019\\\\robofriends-NextJs\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots(props) {\n  console.log('Robots render');\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Robot\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"robot/\".concat(robot.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, robot.name)));\n  })));\n};\n\nRobots.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log('Robots == getInitialProps');\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;","map":{"version":3,"sources":["D:\\WebStormProject\\Complete Developer Map 2019\\robofriends-NextJs\\pages\\robots.js"],"names":["Link","fetch","Robots","props","console","log","robots","map","robot","id","name","getInitialProps","res","json","data"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,kBAAWD,KAAK,CAACC,EAAjB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CADJ,CADJ,CADmB;AAAA,GAAtB,CADL,CAFJ,CADJ;AAcH,CAjBD;;AAmBAR,MAAM,CAACS,eAAP;AAAA;AAAA;AAAA;AAAA,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACHV,KAAK,CAAC,4CAAD,CADF;;AAAA;AACfW,UAAAA,GADe;AAAA;AAAA,iBAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAGrBV,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAHqB,2CAId;AACHC,YAAAA,MAAM,EAAEQ;AADL,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AASA,eAAeZ,MAAf","sourcesContent":["import Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Robots = (props) => {\r\n    console.log('Robots render');\r\n\r\n    return (\r\n        <div>\r\n            <h1>Robot</h1>\r\n            <div>\r\n                {props.robots.map(robot => (\r\n                    <li key={robot.id}>\r\n                        <Link href={`robot/${robot.id}`}>\r\n                            <a>{robot.name}</a>\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRobots.getInitialProps = async function() {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\r\n    const data = await res.json();\r\n    console.log('Robots == getInitialProps');\r\n    return {\r\n        robots: data\r\n    }\r\n};\r\n\r\nexport default Robots"]},"metadata":{},"sourceType":"module"}